---
# yamllint disable rule:line-length

# The point of this workflow is to mock the deploy exactly, except don't actually push the new images.
# To use this workflow, you need to create a branch called docker-test, and push to that branch.

name: Deploy (No Push)
permissions:
  contents: read

# Deploy will run on each GitHub release.
# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - docker-test

jobs:
  # The following is taken from https://github.com/hassio-addons/workflows/blob/3d2f70ad772d71000e33587307e816e5fe82841a/.github/workflows/addon-deploy.yaml
  # Originally we were going to use their script, but since there's no way to stop the push to the home assistant community repo at the end, there's no way to use it.
  information:
    name: ℹ️ Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.information.outputs.architectures }}
      base_image_signer: ${{ steps.information.outputs.codenotary_base_image }}
      build: ${{ steps.information.outputs.build }}
      description: ${{ steps.information.outputs.description }}
      environment: ${{ steps.release.outputs.environment }}
      name: ${{ steps.information.outputs.name }}
      signer: ${{ steps.information.outputs.codenotary_signer }}
      slug: ${{ steps.override.outputs.slug }}
      target: ${{ steps.information.outputs.target }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v5
      - name: 🚀 Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1.4.2
      - name: 🚀 Process possible slug override
        id: override
        run: |
          slug="${{ steps.information.outputs.slug }}"
          echo "slug=$slug" >> "$GITHUB_OUTPUT"
      - name: ℹ️ Gather version and environment
        id: release
        run: |
          sha="${{ github.sha }}"
          environment="edge"
          version="${sha:0:7}"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            version="${version#v}"
            environment="stable"
            if [[ "${{ github.event.release.prerelease }}" = "true" ]]; then
              environment="beta"
            fi
          fi

          echo "environment=${environment}" >> "$GITHUB_OUTPUT"
          echo "version=${version}" >> "$GITHUB_OUTPUT"

  deploy:
    name: 👷 Build & Deploy ${{ matrix.architecture }}
    needs: information
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        architecture: ${{ fromJson(needs.information.outputs.architectures) }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v5
      - name: 🏗  Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🚀 Build & sign add-on image
        uses: home-assistant/builder@510f6144b3a424aeccf8789695d68b1ff8167fcf
        with:
          # --test is important to make this not push!!
          args: |
            --test \
            --all \
            --addon \
            --target ${{ needs.information.outputs.target }} \
            --version ${{ needs.information.outputs.version }} \
            --additional-tag ${{ needs.information.outputs.environment }} \
            --no-latest \
            --cosign
